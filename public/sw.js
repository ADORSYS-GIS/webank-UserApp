try{self["workbox:core:7.2.0"]&&_()}catch{}const x=(n,...e)=>{let t=n;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},O=x;class h extends Error{constructor(e,t){const s=O(e,t);super(s),this.name=e,this.details=t}}const d={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},k=n=>[d.prefix,n,d.suffix].filter(e=>e&&e.length>0).join("-"),D=n=>{for(const e of Object.keys(d))n(e)},S={updateDetails:n=>{D(e=>{typeof n[e]=="string"&&(d[e]=n[e])})},getGoogleAnalyticsName:n=>n||k(d.googleAnalytics),getPrecacheName:n=>n||k(d.precache),getPrefix:()=>d.prefix,getRuntimeName:n=>n||k(d.runtime),getSuffix:()=>d.suffix};function W(n,e){const t=e();return n.waitUntil(t),t}try{self["workbox:precaching:7.2.0"]&&_()}catch{}const I="__WB_REVISION__";function A(n){if(!n)throw new h("add-to-cache-list-unexpected-type",{entry:n});if(typeof n=="string"){const r=new URL(n,location.href);return{cacheKey:r.href,url:r.href}}const{revision:e,url:t}=n;if(!t)throw new h("add-to-cache-list-unexpected-type",{entry:n});if(!e){const r=new URL(t,location.href);return{cacheKey:r.href,url:r.href}}const s=new URL(t,location.href),a=new URL(t,location.href);return s.searchParams.set(I,e),{cacheKey:s.href,url:a.href}}class M{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const a=t.originalRequest.url;s?this.notUpdatedURLs.push(a):this.updatedURLs.push(a)}return s}}}class F{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:s})=>{const a=(s==null?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return a?new Request(a,{headers:t.headers}):t},this._precacheController=e}}let R;function q(){if(R===void 0){const n=new Response("");if("body"in n)try{new Response(n.body),R=!0}catch{R=!1}R=!1}return R}async function H(n,e){let t=null;if(n.url&&(t=new URL(n.url).origin),t!==self.location.origin)throw new h("cross-origin-copy-response",{origin:t});const s=n.clone(),r={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},o=q()?s.body:await s.blob();return new Response(o,r)}const j=n=>new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),"");function E(n,e){const t=new URL(n);for(const s of e)t.searchParams.delete(s);return t.href}async function B(n,e,t,s){const a=E(e.url,t);if(e.url===a)return n.match(e,s);const r=Object.assign(Object.assign({},s),{ignoreSearch:!0}),o=await n.keys(e,r);for(const c of o){const i=E(c.url,t);if(a===i)return n.match(c,s)}}class ${constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const z=new Set;async function G(){for(const n of z)await n()}function V(n){return new Promise(e=>setTimeout(e,n))}try{self["workbox:strategies:7.2.0"]&&_()}catch{}function b(n){return typeof n=="string"?new Request(n):n}class J{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new $,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=b(e);if(s.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const o=await t.preloadResponse;if(o)return o}const a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const o of this.iterateCallbacks("requestWillFetch"))s=await o({request:s.clone(),event:t})}catch(o){if(o instanceof Error)throw new h("plugin-error-request-will-fetch",{thrownErrorMessage:o.message})}const r=s.clone();try{let o;o=await fetch(s,s.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const c of this.iterateCallbacks("fetchDidSucceed"))o=await c({event:t,request:r,response:o});return o}catch(o){throw a&&await this.runCallbacks("fetchDidFail",{error:o,event:t,originalRequest:a.clone(),request:r.clone()}),o}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=b(e);let s;const{cacheName:a,matchOptions:r}=this._strategy,o=await this.getCacheKey(t,"read"),c=Object.assign(Object.assign({},r),{cacheName:a});s=await caches.match(o,c);for(const i of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await i({cacheName:a,matchOptions:r,cachedResponse:s,request:o,event:this.event})||void 0;return s}async cachePut(e,t){const s=b(e);await V(0);const a=await this.getCacheKey(s,"write");if(!t)throw new h("cache-put-with-no-response",{url:j(a.url)});const r=await this._ensureResponseSafeToCache(t);if(!r)return!1;const{cacheName:o,matchOptions:c}=this._strategy,i=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),p=u?await B(i,a.clone(),["__WB_REVISION__"],c):null;try{await i.put(a,u?r.clone():r)}catch(f){if(f instanceof Error)throw f.name==="QuotaExceededError"&&await G(),f}for(const f of this.iterateCallbacks("cacheDidUpdate"))await f({cacheName:o,oldResponse:p,newResponse:r.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const r of this.iterateCallbacks("cacheKeyWillBeUsed"))a=b(await r({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const s=this._pluginStateMap.get(t);yield r=>{const o=Object.assign(Object.assign({},r),{state:s});return t[e](o)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const a of this.iterateCallbacks("cacheWillUpdate"))if(t=await a({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&t.status!==200&&(t=void 0),t}}class Q{constructor(e={}){this.cacheName=S.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s=typeof e.request=="string"?new Request(e.request):e.request,a="params"in e?e.params:void 0,r=new J(this,{event:t,request:s,params:a}),o=this._getResponse(r,s,t),c=this._awaitComplete(o,r,s,t);return[o,c]}async _getResponse(e,t,s){await e.runCallbacks("handlerWillStart",{event:s,request:t});let a;try{if(a=await this._handle(t,e),!a||a.type==="error")throw new h("no-response",{url:t.url})}catch(r){if(r instanceof Error){for(const o of e.iterateCallbacks("handlerDidError"))if(a=await o({error:r,event:s,request:t}),a)break}if(!a)throw r}for(const r of e.iterateCallbacks("handlerWillRespond"))a=await r({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,a){let r,o;try{r=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:r}),await t.doneWaiting()}catch(c){c instanceof Error&&(o=c)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:r,error:o}),t.destroy(),o)throw o}}class g extends Q{constructor(e={}){e.cacheName=S.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(g.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const a=t.params||{};if(this._fallbackToNetwork){const r=a.integrity,o=e.integrity,c=!o||o===r;s=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?o||r:void 0})),r&&c&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,s.clone()))}else throw new h("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new h("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==g.copyRedirectedCacheableResponsesPlugin&&(a===g.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);t===0?this.plugins.push(g.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}g.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:n}){return!n||n.status>=400?null:n}};g.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:n}){return n.redirected?await H(n):n}};class X{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new g({cacheName:S.getPrecacheName(e),plugins:[...t,new F({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){typeof s=="string"?t.push(s):s&&s.revision===void 0&&t.push(s.url);const{cacheKey:a,url:r}=A(s),o=typeof s!="string"&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(r)&&this._urlsToCacheKeys.get(r)!==a)throw new h("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(r),secondEntry:a});if(typeof s!="string"&&s.integrity){if(this._cacheKeysToIntegrities.has(a)&&this._cacheKeysToIntegrities.get(a)!==s.integrity)throw new h("add-to-cache-list-conflicting-integrities",{url:r});this._cacheKeysToIntegrities.set(a,s.integrity)}if(this._urlsToCacheKeys.set(r,a),this._urlsToCacheModes.set(r,o),t.length>0){const c=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(c)}}}install(e){return W(e,async()=>{const t=new M;this.strategy.plugins.push(t);for(const[r,o]of this._urlsToCacheKeys){const c=this._cacheKeysToIntegrities.get(o),i=this._urlsToCacheModes.get(r),u=new Request(r,{integrity:c,cache:i,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:o},request:u,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}})}activate(e){return W(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),s=await t.keys(),a=new Set(this._urlsToCacheKeys.values()),r=[];for(const o of s)a.has(o.url)||(await t.delete(o),r.push(o.url));return{deletedURLs:r}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new h("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let P;const N=()=>(P||(P=new X),P);try{self["workbox:routing:7.2.0"]&&_()}catch{}const K="GET",U=n=>n&&typeof n=="object"?n:{handle:n};class y{constructor(e,t,s=K){this.handler=U(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=U(e)}}class Y extends y{constructor(e,t,s){const a=({url:r})=>{const o=e.exec(r.href);if(o&&!(r.origin!==location.origin&&o.index!==0))return o.slice(1)};super(a,t,s)}}class Z{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(a=>{typeof a=="string"&&(a=[a]);const r=new Request(...a);return this.handleRequest({request:r,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const a=s.origin===location.origin,{params:r,route:o}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let c=o&&o.handler;const i=e.method;if(!c&&this._defaultHandlerMap.has(i)&&(c=this._defaultHandlerMap.get(i)),!c)return;let u;try{u=c.handle({url:s,request:e,event:t,params:r})}catch(f){u=Promise.reject(f)}const p=o&&o.catchHandler;return u instanceof Promise&&(this._catchHandler||p)&&(u=u.catch(async f=>{if(p)try{return await p.handle({url:s,request:e,event:t,params:r})}catch(w){w instanceof Error&&(f=w)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw f})),u}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const r=this._routes.get(s.method)||[];for(const o of r){let c;const i=o.match({url:e,sameOrigin:t,request:s,event:a});if(i)return c=i,(Array.isArray(c)&&c.length===0||i.constructor===Object&&Object.keys(i).length===0||typeof i=="boolean")&&(c=void 0),{route:o,params:c}}return{}}setDefaultHandler(e,t=K){this._defaultHandlerMap.set(t,U(e))}setCatchHandler(e){this._catchHandler=U(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new h("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new h("unregister-route-route-not-registered")}}let C;const ee=()=>(C||(C=new Z,C.addFetchListener(),C.addCacheListener()),C);function v(n,e,t){let s;if(typeof n=="string"){const r=new URL(n,location.href),o=({url:c})=>c.href===r.href;s=new y(o,e,t)}else if(n instanceof RegExp)s=new Y(n,e,t);else if(typeof n=="function")s=new y(n,e,t);else if(n instanceof y)s=n;else throw new h("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return ee().registerRoute(s),s}function te(n,e=[]){for(const t of[...n.searchParams.keys()])e.some(s=>s.test(t))&&n.searchParams.delete(t);return n}function*se(n,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:a}={}){const r=new URL(n,location.href);r.hash="",yield r.href;const o=te(r,e);if(yield o.href,t&&o.pathname.endsWith("/")){const c=new URL(o.href);c.pathname+=t,yield c.href}if(s){const c=new URL(o.href);c.pathname+=".html",yield c.href}if(a){const c=a({url:r});for(const i of c)yield i.href}}class ne extends y{constructor(e,t){const s=({request:a})=>{const r=e.getURLsToCacheKeys();for(const o of se(a.url,t)){const c=r.get(o);if(c){const i=e.getIntegrityForCacheKey(c);return{cacheKey:c,integrity:i}}}};super(s,e.strategy)}}function ae(n){const e=N(),t=new ne(e,n);v(t)}const re="-precache-",oe=async(n,e=re)=>{const s=(await self.caches.keys()).filter(a=>a.includes(e)&&a.includes(self.registration.scope)&&a!==n);return await Promise.all(s.map(a=>self.caches.delete(a))),s};function ce(){self.addEventListener("activate",n=>{const e=S.getPrecacheName();n.waitUntil(oe(e).then(t=>{}))})}function ie(n){return N().createHandlerBoundToURL(n)}function le(n){N().precache(n)}function he(n,e){le(n),ae(e)}class ue extends y{constructor(e,{allowlist:t=[/./],denylist:s=[]}={}){super(a=>this._match(a),e),this._allowlist=t,this._denylist=s}_match({url:e,request:t}){if(t&&t.mode!=="navigate")return!1;const s=e.pathname+e.search;for(const a of this._denylist)if(a.test(s))return!1;return!!this._allowlist.some(a=>a.test(s))}}const fe="webank-db",L="shared-content",de=1,ge=()=>new Promise((n,e)=>{console.log("[SW] Opening database connection");const t=indexedDB.open(fe,de);t.onerror=s=>{console.error("[SW] Database error:",s.target.error),e(new Error("Database error"))},t.onsuccess=s=>{console.log("[SW] Database opened successfully"),n(s.target.result)},t.onupgradeneeded=s=>{console.log("[SW] Database upgrade needed");const a=s.target.result;a.objectStoreNames.contains(L)||a.createObjectStore(L,{keyPath:"id"})}});self.addEventListener("message",n=>{n.data&&n.data.type==="SKIP_WAITING"&&(console.log("[SW] Skipping waiting"),self.skipWaiting())});self.addEventListener("install",n=>{console.log("[SW] Installing service worker"),n.waitUntil(self.skipWaiting())});self.addEventListener("activate",n=>{console.log("[SW] Activating service worker"),n.waitUntil(Promise.all([self.clients.claim(),ce()]))});he([{"revision":"2adb6736f5c719d377d8bfd226572a4d","url":"android-chrome-144x144.png"},{"revision":"023a421985eb1a1374381e58ecbede77","url":"android-chrome-192x192.png"},{"revision":"6c0ad7bc6af938f167e6d3601892a628","url":"android-chrome-512x512.png"},{"revision":"51946c6c39e3a2bfdda2d91b1590bdaa","url":"apple-touch-icon.png"},{"revision":null,"url":"assets/index-BKF9BneS.css"},{"revision":null,"url":"assets/index-CDK34U3u.js"},{"revision":null,"url":"assets/projectEnvVariables-CKUWVdfg.js"},{"revision":null,"url":"assets/Webank-f4mPBTP9.png"},{"revision":"537eb96f1edb9502a4ac203ea7b3415a","url":"back-id.png"},{"revision":"537eb96f1edb9502a4ac203ea7b3415a","url":"BackId.png"},{"revision":"71dcfd191507c31dc79efe3341dfa3b9","url":"favicon copy.svg"},{"revision":"7bfbc531bdae98c8dcf7303f11205b94","url":"favicon.ico"},{"revision":"71dcfd191507c31dc79efe3341dfa3b9","url":"favicon.svg"},{"revision":"fea0a40b683b611731904b67a4e63467","url":"front-id.png"},{"revision":"94d63ee1b81ca472d13bdef262c48eb3","url":"index.html"},{"revision":"f0402b67b6ce880f65666bb49e841696","url":"react.svg"},{"revision":"edd56bc92721de008aceec78f9bf2f1d","url":"Screenshot_dashboard.png"},{"revision":"66ad29d2cb0c981205f7bae6ba42d317","url":"Screenshot_otp.png"},{"revision":"4649c1492f3fe09d3375bebe42fe4727","url":"Screenshot_register.png"},{"revision":"5b605622c85f66c193ca2c161ae17761","url":"selfie-id.png"},{"revision":"945c850826c6ebf53827953eda2d5d9e","url":"Tax.png"},{"revision":"2adb6736f5c719d377d8bfd226572a4d","url":"android-chrome-144x144.png"},{"revision":"023a421985eb1a1374381e58ecbede77","url":"android-chrome-192x192.png"},{"revision":"6c0ad7bc6af938f167e6d3601892a628","url":"android-chrome-512x512.png"},{"revision":"2884116872fd8cdbfaf00f5a07b95d8a","url":"manifest.webmanifest"}]);let pe;v(new ue(ie("index.html"),{allowlist:pe}));v(({url:n})=>{const e=n.pathname==="/share-handler";return console.log(`[SW] Intercepted request: ${n.href}, isShareHandler: ${e}`),e},async({request:n})=>{console.log("[SW] Handling POST /share-handler");try{const e=await n.formData(),t=e.get("title")||"",s=e.get("text")||"",a=e.get("url")||"",r=e.getAll("files");if(console.log("[SW] Form data:",{title:t,text:s,url:a,fileCount:r.length,files:r.map(l=>({name:l.name,type:l.type,size:l.size}))}),!r.length)return console.error("[SW] No files received"),new Response("No files shared",{status:400});const o=await Promise.all(r.map(async l=>{console.log(`[SW] Processing file: ${l.name} (${l.type}, ${l.size} bytes)`);try{const m=await we(l);return{name:l.name,type:l.type,size:l.size,base64:m}}catch(m){throw console.error(`[SW] Failed to process file ${l.name}:`,m),new Error(`Failed to process file ${l.name}`)}})),c={title:t,text:s,url:a,files:o},i=JSON.stringify(c).length;if(console.log("[SW] Shared content size:",i),i>10*1024*1024)return console.error("[SW] Content too large for IndexedDB:",i),new Response("File too large (max 10MB)",{status:400});const f=(await ge()).transaction(L,"readwrite").objectStore(L);console.log("[SW] Storing data in IndexedDB"),await new Promise((l,m)=>{const T=f.put({id:"sharedContent",...c});T.onsuccess=()=>l(),T.onerror=()=>m(new Error("Failed to store shared content"))}),console.log("[SW] Data stored successfully");const w=await self.clients.matchAll({type:"window",includeUncontrolled:!0});if(console.log("[SW] Found clients:",w.length),w.length===0){console.warn("[SW] No clients found, opening new window");const l=await self.clients.openWindow("/share-handler");console.log("[SW] New window opened:",l?"Success":"Failed")}else for(const l of w)console.log("[SW] Sending RELOAD_CONTENT to client:",l.id),l.postMessage({type:"RELOAD_CONTENT",data:c});return console.log("[SW] Redirecting to /share-handler"),Response.redirect("/share-handler",303)}catch(e){return console.error("[SW] Error handling share:",e),new Response("Error processing share: ",{status:500})}},"POST");async function we(n){return new Promise((e,t)=>{const s=new FileReader;s.onload=()=>{console.log("[SW] File conversion completed"),e(s.result)},s.onerror=()=>{console.error("[SW] File conversion failed"),t(new Error("Failed to read file as base64"))},s.readAsDataURL(n)})}
